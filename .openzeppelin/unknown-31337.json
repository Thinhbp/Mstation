{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "txHash": "0x7efc24536df19b86c55d181d151d4cb469f875759952597ed6f0127088963935",
    "deployTransaction": {
      "hash": "0x7efc24536df19b86c55d181d151d4cb469f875759952597ed6f0127088963935",
      "type": 2,
      "accessList": [],
      "blockHash": "0xe6c45419d90446a6bbbf87bf8c1d1769fa0a3d702e07f1154b07fbf78aabae68",
      "blockNumber": 2,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x6a556674"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x991002e8"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xc7f2d892104122a8e17a97e04822a74915f8e4909fa7f10c3797315823ee70cb",
      "s": "0x2938fc5c76fb3f0d979988bf11dc3d0a56c1b635c86bc49795f120c1931bd5e7",
      "v": 1,
      "creates": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "chainId": 31337
    }
  },
  "proxies": [
    {
      "address": "0x36b58F5C1969B7b6591D752ea6F5486D069010AB",
      "txHash": "0x14105b5145752fbc685901c3d5f9c0c796b81b6a10d3fc8259e00803a7fe760e",
      "kind": "transparent"
    },
    {
      "address": "0xBEc49fA140aCaA83533fB00A2BB19bDdd0290f25",
      "txHash": "0x8708208ffcfa1c282ba56954b8f03decc4d1f23027b70b8d334272ffa2765436",
      "kind": "transparent"
    },
    {
      "address": "0x1c85638e118b37167e9298c2268758e058DdfDA0",
      "txHash": "0x639f0bc2136941e38f794bc9b78cd71b25bfad9e6e90a66c658f1af61b20c3b6",
      "kind": "transparent"
    },
    {
      "address": "0x49fd2BE640DB2910c2fAb69bB8531Ab6E76127ff",
      "txHash": "0xd4c0e9d1950babf69c778e6d535e95faa3c036498e0184f38cf004d19dbf443f",
      "kind": "transparent"
    },
    {
      "address": "0xDC11f7E700A4c898AE5CAddB1082cFfa76512aDD",
      "txHash": "0xf017d0ff2c6a604480aa722efeb5796eef816626020a431c1bbc5a73e45a5bf0",
      "kind": "transparent"
    },
    {
      "address": "0x46b142DD1E924FAb83eCc3c08e4D46E82f005e0E",
      "txHash": "0x48356290560119261ed4da819512b072a77c63cdd803b24fa7e0be732aabec11",
      "kind": "transparent"
    },
    {
      "address": "0x4C2F7092C2aE51D986bEFEe378e50BD4dB99C901",
      "txHash": "0x60e8ffc569a809db42e592d86daa98fdf22e4574c7a8c04519c2d57e349ed616",
      "kind": "transparent"
    },
    {
      "address": "0x51A1ceB83B83F1985a81C295d1fF28Afef186E02",
      "txHash": "0x84447303bc3c53175c9caea9b38475e87a6b3188cf6954766430d1b37576c93e",
      "kind": "transparent"
    },
    {
      "address": "0x202CCe504e04bEd6fC0521238dDf04Bc9E8E15aB",
      "txHash": "0xe8009a0be5a6554b3e11dbaa5b775e4b009a2076699907e69008b4ae8e37a62b",
      "kind": "transparent"
    },
    {
      "address": "0xD84379CEae14AA33C123Af12424A37803F885889",
      "txHash": "0x04ec204bca85e208036a9ba8dc1a2e3cbe6fc2cc76b4b19f8f95468bfba11806",
      "kind": "transparent"
    },
    {
      "address": "0xC9a43158891282A2B1475592D5719c001986Aaec",
      "txHash": "0x24e8a493e0931dc128168828edd8ebb8c078409289673fe99b47bef93b0b55a5",
      "kind": "transparent"
    },
    {
      "address": "0x8198f5d8F8CfFE8f9C413d98a0A55aEB8ab9FbB7",
      "txHash": "0x926984797c099c7682d205a6fe43031a37a01f3e022a7aa10959bf0f706fa04c",
      "kind": "transparent"
    },
    {
      "address": "0x172076E0166D1F9Cc711C77Adf8488051744980C",
      "txHash": "0xf9800713bd69781a24b05dc4fa40978fb013508e07ad9b1969103b71c6fa7c44",
      "kind": "transparent"
    },
    {
      "address": "0x0355B7B8cb128fA5692729Ab3AAa199C1753f726",
      "txHash": "0xd36424d2e5e1881afc068d682d54b615192ba5745933fc065bd2745471b25d45",
      "kind": "transparent"
    },
    {
      "address": "0x4EE6eCAD1c2Dae9f525404De8555724e3c35d07B",
      "txHash": "0x16dc89c5ee629165d46c8f14eaa82632884930da0f38c81606572243cc84b274",
      "kind": "transparent"
    },
    {
      "address": "0xfbC22278A96299D91d41C453234d97b4F5Eb9B2d",
      "txHash": "0x0bb89ffd552924d2a64be9262614b65734008b1ba37baa78a0262068e9ec6229",
      "kind": "transparent"
    },
    {
      "address": "0x367761085BF3C12e5DA2Df99AC6E1a824612b8fb",
      "txHash": "0x435983ec25c31dc35f83a84d12f077b907f7efb0113139c4d6ac12905f0c7d18",
      "kind": "transparent"
    },
    {
      "address": "0x4631BCAbD6dF18D94796344963cB60d44a4136b6",
      "txHash": "0x9495aea7d81f090901e821afb384584237e27a3427f1a72aa7c01d88a6946336",
      "kind": "transparent"
    },
    {
      "address": "0x5c74c94173F05dA1720953407cbb920F3DF9f887",
      "txHash": "0x8063dba78afbf54dd5e84cec8846feaccb3295f8429d79cb6aeec6ed66610491",
      "kind": "transparent"
    },
    {
      "address": "0x18E317A7D70d8fBf8e6E893616b52390EbBdb629",
      "txHash": "0xf67350bdd484495b07dc3c6c32c0cc44ca1495cb4ea5f1b81dd069637e6a33bd",
      "kind": "transparent"
    },
    {
      "address": "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      "txHash": "0x2a7ea1865ad3cf153a85be388d5d10475ea221c6ea0d8a0562c7e49ac34d7723",
      "kind": "transparent"
    },
    {
      "address": "0x59b670e9fA9D0A427751Af201D676719a970857b",
      "txHash": "0x0f6cf93d57dceb6e4fbcd084b8d0e3a9b34fe33b345342cfbcfefe59dc453cd2",
      "kind": "transparent"
    },
    {
      "address": "0xD8a5a9b31c3C0232E196d518E89Fd8bF83AcAd43",
      "txHash": "0x77b7106c883e1ee53645ee907f5c04e91a72533e9029acd5283fad32d5d86059",
      "kind": "transparent"
    },
    {
      "address": "0xf5059a5D33d5853360D16C683c16e67980206f36",
      "txHash": "0x3b015d007e1679265ade58ed1cdbcb716759ca98a92a299f247916ecb642a3e8",
      "kind": "transparent"
    },
    {
      "address": "0x95401dc811bb5740090279Ba06cfA8fcF6113778",
      "txHash": "0x7acbc1b166f02dc3e1253800e6ab471b8aa1687df630122f69ba81972f755554",
      "kind": "transparent"
    },
    {
      "address": "0x998abeb3E57409262aE5b751f60747921B33613E",
      "txHash": "0x6b5513e239a1f4bed088384d0336a4b1d6b04b588019a2bbfc8a9f420d71f680",
      "kind": "transparent"
    },
    {
      "address": "0x70e0bA845a1A0F2DA3359C97E0285013525FFC49",
      "txHash": "0x9b234ac0be2b5ebf470e1439be66f20d0a10a1f350e927527187179dd92ebba1",
      "kind": "transparent"
    },
    {
      "address": "0x7969c5eD335650692Bc04293B07F5BF2e7A673C0",
      "txHash": "0xd9914394d9fe084e15ef70e6ad9c8fb21c4b13e6e95b9135bde3c7871717bbb0",
      "kind": "transparent"
    },
    {
      "address": "0x82e01223d51Eb87e16A03E24687EDF0F294da6f1",
      "txHash": "0x4457d6671a51c06dadd338780b40ff9b6c671c73b2f5c3c6724227b35dcd2b01",
      "kind": "transparent"
    },
    {
      "address": "0x2bdCC0de6bE1f7D2ee689a0342D76F52E8EFABa3",
      "txHash": "0xe4d5b0c578c1467ec5177d3b46259cd7e980f31272f1accaed09cf0267912702",
      "kind": "transparent"
    },
    {
      "address": "0x21dF544947ba3E8b3c32561399E88B52Dc8b2823",
      "txHash": "0xe87134a32b3aebba9baa4f174d0d0cd7d03872c08097525298d2d9010483b0f2",
      "kind": "transparent"
    },
    {
      "address": "0x2E2Ed0Cfd3AD2f1d34481277b3204d807Ca2F8c2",
      "txHash": "0xd705b7c0ed4c4be0f340a08dc16085783207b86bd6c406c9680911690d42252c",
      "kind": "transparent"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x8e2f551aafc846aae7d530c481fd9cad8ec853d3e62b199ab9323f8b121f39a8",
      "kind": "transparent"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x7d169b11a63bbb84f6903f66c6fa623c775f451908454006137f4ef1caccf447",
      "kind": "transparent"
    },
    {
      "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
      "txHash": "0xbfd7b427ce14e7976db71c73463c1e9f3818d06fdc88e99c8959360a8ff0a5a6",
      "kind": "transparent"
    },
    {
      "address": "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
      "txHash": "0xffc141b929f4f65663739cb655c2f1de21196519a344f33f8782be69037db766",
      "kind": "transparent"
    },
    {
      "address": "0x4A679253410272dd5232B3Ff7cF5dbB88f295319",
      "txHash": "0x18abe62daa49a967872bee19cba6db5efe26e9cbdaf1ec1b3a3ddb80d825a404",
      "kind": "transparent"
    },
    {
      "address": "0x09635F643e140090A9A8Dcd712eD6285858ceBef",
      "txHash": "0x6e6a04cfaabf531597faf78904e1deeec1aaf1129c03b903296020de6be8e388",
      "kind": "transparent"
    },
    {
      "address": "0xc5a5C42992dECbae36851359345FE25997F5C42d",
      "txHash": "0x34d74e6687deeda7aaacc1af33bc167baed56cfbfbf7be76bb6d2e3473c2f737",
      "kind": "transparent"
    },
    {
      "address": "0x67d269191c92Caf3cD7723F116c85e6E9bf55933",
      "txHash": "0x137ccecb680260cd9e49beb81f9b22229f576b689cc60c9eff1793013ff5946f",
      "kind": "transparent"
    },
    {
      "address": "0xE6E340D132b5f46d1e472DebcD681B2aBc16e57E",
      "txHash": "0x8e746ec21819b7f2a5e8839f5708fca8123cfeb5a382006fe98dbc56c7c8c0d2",
      "kind": "transparent"
    },
    {
      "address": "0xc3e53F4d16Ae77Db1c982e75a937B9f60FE63690",
      "txHash": "0x8f404d00b3652180e85067634bba3c4cf9ee4c1c4db152d2621936c89040beac",
      "kind": "transparent"
    },
    {
      "address": "0x84eA74d481Ee0A5332c457a4d796187F6Ba67fEB",
      "txHash": "0xbd298fafdcef84cedac14a4295eb8cc6d9573b09a212d553042c70cd88b31cae",
      "kind": "transparent"
    },
    {
      "address": "0x9E545E3C0baAB3E08CdfD552C960A1050f373042",
      "txHash": "0x2c0ea3590d2622aca6abce6aca50faa0f68468a260edb3e918947f219885cce1",
      "kind": "transparent"
    },
    {
      "address": "0xa82fF9aFd8f496c3d6ac40E2a0F282E47488CFc9",
      "txHash": "0xe40ff8957ecdb812b0ef8e1996ba6ecc5b0842e0ae39100834f3f0c0d37ad037",
      "kind": "transparent"
    },
    {
      "address": "0x1613beB3B2C4f22Ee086B2b38C1476A3cE7f78E8",
      "txHash": "0x1d477eda054bb296cb1bee9c05d5d8bd04426cfda4db0a0075ea095571ddf351",
      "kind": "transparent"
    },
    {
      "address": "0x851356ae760d987E095750cCeb3bC6014560891C",
      "txHash": "0x01cc003151b69ada7d9747edd84b7866a7e2dc3d50b951df294a514e58b80522",
      "kind": "transparent"
    },
    {
      "address": "0x4826533B4897376654Bb4d4AD88B7faFD0C98528",
      "txHash": "0x7d74d9f3f348eff08c550a32a5319df31a97cba149f119ca00e52e3c8f461e3f",
      "kind": "transparent"
    },
    {
      "address": "0x99bbA657f2BbC93c02D617f8bA121cB8Fc104Acf",
      "txHash": "0x87f7e551c66f422a4ff481023cde329df9c201349c753b8a167cc6577e08a378",
      "kind": "transparent"
    },
    {
      "address": "0x0E801D84Fa97b50751Dbf25036d067dCf18858bF",
      "txHash": "0xad6c49833e5b56081e5b6d47eafe45383344e39fba0c7cb0117cb121d02f576e",
      "kind": "transparent"
    },
    {
      "address": "0x8f86403A4DE0BB5791fa46B8e795C547942fE4Cf",
      "txHash": "0xd7fe641b088b3b9d2dc7f087416e41da5520876aae35e60a09ba4d29e25814c3",
      "kind": "transparent"
    },
    {
      "address": "0x9d4454B023096f34B160D6B654540c56A1F81688",
      "txHash": "0xe85b5244bbebcbfc51db07e11d392a6d0ef73d8abd752c2f34fb3b33f8673281",
      "kind": "transparent"
    },
    {
      "address": "0x5eb3Bc0a489C5A8288765d2336659EbCA68FCd00",
      "txHash": "0x07878b7a92d342ad3638cc3322409e06c85e388087df1d578ee803f08e41a79d",
      "kind": "transparent"
    },
    {
      "address": "0x36C02dA8a0983159322a80FFE9F24b1acfF8B570",
      "txHash": "0xb5262eb0aeb4fa82df664b8cfe0cf15c5093b4606b3bded64380cbf20ef092b0",
      "kind": "transparent"
    },
    {
      "address": "0x809d550fca64d94Bd9F66E60752A544199cfAC3D",
      "txHash": "0x2f4e466d2b1cf93c163d4b077e5368c72b2f85cc59dcfe05bb72bc1f3a13f515",
      "kind": "transparent"
    },
    {
      "address": "0x4c5859f0F772848b2D91F1D83E2Fe57935348029",
      "txHash": "0xf5599fc65aca4a4b87dcd031e81e3e206c8e9bdbf67ee19085738c0d89b72c73",
      "kind": "transparent"
    },
    {
      "address": "0x1291Be112d480055DaFd8a610b7d1e203891C274",
      "txHash": "0x0a2ca81ff296f33b3c551cf7cddaab6e426fbeacbf421c01174baec4219439b1",
      "kind": "transparent"
    },
    {
      "address": "0x5f3f1dBD7B74C6B46e8c44f98792A1dAf8d69154",
      "txHash": "0x972bdb74f0bf4082a562ee30e4794e577b1747b9970e1036849c9edcd89c4d15",
      "kind": "transparent"
    },
    {
      "address": "0xb7278A61aa25c888815aFC32Ad3cC52fF24fE575",
      "txHash": "0x929e266dae0f7c42b512fa3b3b27e51fabdaa523f8da27968b425f6552532a47",
      "kind": "transparent"
    },
    {
      "address": "0xCD8a1C3ba11CF5ECfa6267617243239504a98d90",
      "txHash": "0x4a2ed7e6ae5fadc0b257ccbb341c923c433bcfde47e825ab4d86373804e4a8bb",
      "kind": "transparent"
    },
    {
      "address": "0x7bc06c482DEAd17c0e297aFbC32f6e63d3846650",
      "txHash": "0xc6b0fa2f87e1a2e1fa88dba8c6ae72605cdc2cfecdcd51312288e4550a41f330",
      "kind": "transparent"
    },
    {
      "address": "0xc351628EB244ec633d5f21fBD6621e1a683B1181",
      "txHash": "0x95f66f0203130fd306dcd7b5dbcd059f70579568da0c5429fcdb18b2f0e4ce2f",
      "kind": "transparent"
    },
    {
      "address": "0xFD471836031dc5108809D173A067e8486B9047A3",
      "txHash": "0x5207980b14e9efa0a2989c4ad302cef6bd6e33f8514199cc3d942ffba6be6edb",
      "kind": "transparent"
    },
    {
      "address": "0xcbEAF3BDe82155F56486Fb5a1072cb8baAf547cc",
      "txHash": "0xb5cff2558ac3d76034126189e24e114b1f39ef4fac77bf6ddbc73e4560946a32",
      "kind": "transparent"
    },
    {
      "address": "0x1429859428C0aBc9C2C47C8Ee9FBaf82cFA0F20f",
      "txHash": "0x3070b19b8009c7f4b067ff6b440f67f0ca8d84d1fe27053842af06d38e118a9d",
      "kind": "transparent"
    },
    {
      "address": "0xB0D4afd8879eD9F52b28595d31B441D079B2Ca07",
      "txHash": "0x93248177e3c64b02952ce151464084e9a06c3e6da92555453a0f49de1b9e6d48",
      "kind": "transparent"
    },
    {
      "address": "0x162A433068F51e18b7d13932F27e66a3f99E6890",
      "txHash": "0x7f9c1a5df1a1e921379ef1989bcfd6a316f625d98b70e0c12a4fd7ac679047a7",
      "kind": "transparent"
    },
    {
      "address": "0x922D6956C99E12DFeB3224DEA977D0939758A1Fe",
      "txHash": "0x34803b0937627722c860b9500b061e8a016dce71d5833f118e165a336ac0c799",
      "kind": "transparent"
    },
    {
      "address": "0x5081a39b8A5f0E35a8D959395a630b68B74Dd30f",
      "txHash": "0x59c6bf54371ce416b06745a0948bdac37126096750d0efbf940aa8f17898d4e7",
      "kind": "transparent"
    },
    {
      "address": "0x1fA02b2d6A771842690194Cf62D91bdd92BfE28d",
      "txHash": "0x5532474f12b0f141c2b8c0ce696ef8186e591a1553a1db82ad35c6f91ef3e65e",
      "kind": "transparent"
    },
    {
      "address": "0xdbC43Ba45381e02825b14322cDdd15eC4B3164E6",
      "txHash": "0x92785c20a0e4df137f1d6902c878cbfd10968e3da54b7217c38b7e8ad6cfe5cf",
      "kind": "transparent"
    },
    {
      "address": "0x04C89607413713Ec9775E14b954286519d836FEf",
      "txHash": "0x2983417c9d615670a9b450b52d1b79f9a8f8e416de94b1e0f5f5a3912add50f2",
      "kind": "transparent"
    },
    {
      "address": "0x4C4a2f8c81640e47606d3fd77B353E87Ba015584",
      "txHash": "0x9ac569eec0f918acde49ba02a2719b6df346292b9934fc01b7c4f800df1e09c6",
      "kind": "transparent"
    },
    {
      "address": "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      "txHash": "0xd4390639e5ce7f9ce19ca73ad263345981a43037d174d12a41860f9663cbd321",
      "kind": "transparent"
    },
    {
      "address": "0x322813Fd9A801c5507c9de605d63CEA4f2CE6c44",
      "txHash": "0x098fc0c9363b1e8a3f44b07f9809c84d1e6fc6e3e47885b9092241a83ebad9e5",
      "kind": "transparent"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x92e8fd7b2aff519452bfbb9583500db3e0c4136d82370362b1cf5c38d2835f1e",
      "kind": "transparent"
    },
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x681e0e1c99c81108c47014f4411218d3f0b0c61ad7da1fe0efd256ee83f7c1b4",
      "kind": "transparent"
    },
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x9b735465c90c8b0e4470d33a410a2152684aa87c2b1948621fe0c88487c0a4d3",
      "kind": "transparent"
    },
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x1e4c5ce7257e781ab3880791bcc3886c87aedd4202b027f8fb5501b28077e078",
      "kind": "transparent"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0x53265883b17ee323204ffad89730dc8f943a52ddc0f2a6ae9b75bccfc535ac64",
      "kind": "transparent"
    },
    {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0xb7f81517d64e5463e5b18602d4f3bf3764693d9be1a5927fec380efb8fc97588",
      "kind": "transparent"
    },
    {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0xe17e556828ad5dcbb9e17125d5002cad741aa1341be150cf1634ed2650067f4f",
      "kind": "transparent"
    },
    {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x2b750f928a5283f2cf8a2567385068fc5cc288d0aaeb1285694ff6cc228c8961",
      "kind": "transparent"
    },
    {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0x8f0b48bf4184954bc7e6579a3d2da1d670557618bd0c48550f177cedfb317a7d",
      "kind": "transparent"
    },
    {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0x99005c8c0427590cf2b4e281f08bf1f614e0e6f2df8db633bf1ed1ea09b716f5",
      "kind": "transparent"
    },
    {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0xf5f82080daf226ef8fffe962a629bd1b605ca43cb4d2af4171d3dd6911af780d",
      "kind": "transparent"
    },
    {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0x41524b622d11b85ec35d36a3b31a973391250c3c2bc980e932833f7030026523",
      "kind": "transparent"
    },
    {
      "address": "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
      "txHash": "0xff17c9222f666c47d628c7b52ad5a2a7809fa81a8b23bf8609897d2dd3f470ed",
      "kind": "transparent"
    },
    {
      "address": "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE",
      "txHash": "0xcd4f003edaffcb3cb90778bfc57eb3776ab9084f03a900d6f3831afd85c33729",
      "kind": "transparent"
    },
    {
      "address": "0x68B1D87F95878fE05B998F19b66F4baba5De1aed",
      "txHash": "0x24685e093ad30c3fefdb377888f190ba8f9ae2a436c8f8f705be5c40ff560822",
      "kind": "transparent"
    },
    {
      "address": "0x7a2088a1bFc9d81c55368AE168C2C02570cB814F",
      "txHash": "0xf1c02173ec9afe27d5ede5527277f0366a3aaf0190e22ac000424148ad371d79",
      "kind": "transparent"
    }
  ],
  "impls": {
    "2000277feeb45ee89eb86c34f1f2f4d964fc8b75ea20894375bb624c8fa4c42b": {
      "address": "0x8198f5d8F8CfFE8f9C413d98a0A55aEB8ab9FbB7",
      "txHash": "0x1e04e10381d0cb38e9f1e7645d5d04fa1393131200f123535fe8336f7f3667d5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ReferralBonus",
            "label": "pause",
            "type": "t_bool",
            "src": "contracts/referral/ReferralBonus.sol:26"
          },
          {
            "contract": "ReferralBonus",
            "label": "rewardPerInvitation",
            "type": "t_uint256",
            "src": "contracts/referral/ReferralBonus.sol:28"
          },
          {
            "contract": "ReferralBonus",
            "label": "rewardTokenAddress",
            "type": "t_contract(IERC20)5823",
            "src": "contracts/referral/ReferralBonus.sol:30"
          },
          {
            "contract": "ReferralBonus",
            "label": "rewardWallet",
            "type": "t_address",
            "src": "contracts/referral/ReferralBonus.sol:32"
          },
          {
            "contract": "ReferralBonus",
            "label": "userRewards",
            "type": "t_mapping(t_address,t_struct(UserReward)11928_storage)",
            "src": "contracts/referral/ReferralBonus.sol:34"
          },
          {
            "contract": "ReferralBonus",
            "label": "referralers",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/referral/ReferralBonus.sol:36"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20)5823": {
            "label": "contract IERC20"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UserReward)11928_storage)": {
            "label": "mapping(address => struct ReferralBonus.UserReward)"
          },
          "t_struct(UserReward)11928_storage": {
            "label": "struct ReferralBonus.UserReward",
            "members": [
              {
                "label": "rewardAmount",
                "type": "t_uint256"
              },
              {
                "label": "deptAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6f884ef51d48b266454afbaa82bc5bf04c26081d2d624f3d77be788a686a55bb": {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0x569ea2ad1d15a4ad2474988767bb337b2503fd9d57cb9ce8e6114fc8ac8c5629",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "Marketplace",
            "label": "listings",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)6617_storage))",
            "src": "contracts/marketplace/Marketplace.sol:43"
          },
          {
            "contract": "Marketplace",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts/marketplace/Marketplace.sol:45"
          },
          {
            "contract": "Marketplace",
            "label": "serviceFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/Marketplace.sol:46"
          },
          {
            "contract": "Marketplace",
            "label": "itemListings",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ItemListing)6626_storage))",
            "src": "contracts/marketplace/Marketplace.sol:48"
          },
          {
            "contract": "Marketplace",
            "label": "listingId",
            "type": "t_uint256",
            "src": "contracts/marketplace/Marketplace.sol:49"
          },
          {
            "contract": "Marketplace",
            "label": "legends",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/marketplace/Marketplace.sol:52"
          },
          {
            "contract": "Marketplace",
            "label": "whitelistCurrencies",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/Marketplace.sol:54"
          },
          {
            "contract": "Marketplace",
            "label": "whitelistNFTContracts",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/marketplace/Marketplace.sol:55"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)6617_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Marketplace.Listing))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Listing)6617_storage)": {
            "label": "mapping(uint256 => struct Marketplace.Listing)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Listing)6617_storage": {
            "label": "struct Marketplace.Listing",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "currency",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(ItemListing)6626_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Marketplace.ItemListing))"
          },
          "t_mapping(t_uint256,t_struct(ItemListing)6626_storage)": {
            "label": "mapping(uint256 => struct Marketplace.ItemListing)"
          },
          "t_struct(ItemListing)6626_storage": {
            "label": "struct Marketplace.ItemListing",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "76cff3f2d2489a52cbe8861b2de635234898f36aa4ea9b97d2a4626716caa9cd": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x8cec9a455faeb1dd2af405b48441d92702540861f6af6bc264e30f3879fd9167",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:76"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "mintStart",
            "type": "t_bool",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:17"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "factory",
            "type": "t_address",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:47"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "mstationSchool",
            "type": "t_address",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:48"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "whitelisted",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:49"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "heroAttributes",
            "type": "t_mapping(t_uint256,t_struct(HeroAttribute)9028_storage)",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:51"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "heroCombats",
            "type": "t_mapping(t_uint256,t_struct(HeroCombat)9043_storage)",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:52"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "baseUri",
            "type": "t_string_storage",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:54"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "dropPrice",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:55"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "dropList",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:57"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "nonce",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:59"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "nonce2",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:60"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "nonce3",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:61"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "whitelistBoxMinters",
            "type": "t_mapping(t_address,t_struct(WhitelistBoxMinter)9088_storage)",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:69"
          },
          {
            "contract": "Roboticist",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/Roboticist.sol:14"
          },
          {
            "contract": "Roboticist",
            "label": "tokePrefix",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/Roboticist.sol:21"
          },
          {
            "contract": "Roboticist",
            "label": "nonceRandom",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/Roboticist.sol:22"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_struct(HeroAttribute)9028_storage)": {
            "label": "mapping(uint256 => struct BaseMStationNFT.HeroAttribute)"
          },
          "t_struct(HeroAttribute)9028_storage": {
            "label": "struct BaseMStationNFT.HeroAttribute",
            "members": [
              {
                "label": "strength",
                "type": "t_uint16"
              },
              {
                "label": "stamina",
                "type": "t_uint16"
              },
              {
                "label": "vitality",
                "type": "t_uint16"
              },
              {
                "label": "courage",
                "type": "t_uint16"
              },
              {
                "label": "dexterity",
                "type": "t_uint16"
              },
              {
                "label": "intelligence",
                "type": "t_uint16"
              },
              {
                "label": "breed",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint16"
              },
              {
                "label": "rarity",
                "type": "t_uint16"
              },
              {
                "label": "teamId",
                "type": "t_uint16"
              },
              {
                "label": "talent",
                "type": "t_uint16"
              },
              {
                "label": "skill",
                "type": "t_uint16"
              },
              {
                "label": "combat",
                "type": "t_uint16"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_struct(HeroCombat)9043_storage)": {
            "label": "mapping(uint256 => struct BaseMStationNFT.HeroCombat)"
          },
          "t_struct(HeroCombat)9043_storage": {
            "label": "struct BaseMStationNFT.HeroCombat",
            "members": [
              {
                "label": "lastCombatBlock",
                "type": "t_uint256"
              },
              {
                "label": "health",
                "type": "t_uint256"
              },
              {
                "label": "physicalAttack",
                "type": "t_uint256"
              },
              {
                "label": "magicalAttack",
                "type": "t_uint256"
              },
              {
                "label": "defense",
                "type": "t_uint256"
              },
              {
                "label": "magicResistance",
                "type": "t_uint256"
              },
              {
                "label": "accuracy",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_struct(WhitelistBoxMinter)9088_storage)": {
            "label": "mapping(address => struct BaseMStationNFT.WhitelistBoxMinter)"
          },
          "t_struct(WhitelistBoxMinter)9088_storage": {
            "label": "struct BaseMStationNFT.WhitelistBoxMinter",
            "members": [
              {
                "label": "total",
                "type": "t_uint256"
              },
              {
                "label": "startBlock",
                "type": "t_uint256"
              },
              {
                "label": "endBlock",
                "type": "t_uint256"
              },
              {
                "label": "totalMinted",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5622d838435131031852024e040889f9c585618fba2c1dd1f59e061d00c2cbbc": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x8efa55f1ac9393b737002c5831283df06819a578b462e39f85e3562cb3864af7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)5458_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "BSCD",
            "label": "pause",
            "type": "t_bool",
            "src": "contracts/token/BSCD.sol:15"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)5458_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)5458_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5157_storage"
              }
            ]
          },
          "t_struct(Set)5157_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "b2d81f14010688663ff5efadab763886f5f767c4bd5d68c4ee899caaa3668999": {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x5acc08bf782c0c1954f336eb7babf52e39389b247da6da30ea57228394dfcc34",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "MstationNFT",
            "label": "isInitialized",
            "type": "t_bool",
            "src": "contracts/mstationNFT/MstationNFT.sol:13"
          },
          {
            "contract": "MstationNFT",
            "label": "nonceRandom",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/MstationNFT.sol:14"
          },
          {
            "contract": "MstationNFT",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts/mstationNFT/MstationNFT.sol:15"
          },
          {
            "contract": "MstationNFT",
            "label": "burnWallet",
            "type": "t_address",
            "src": "contracts/mstationNFT/MstationNFT.sol:16"
          },
          {
            "contract": "MstationNFT",
            "label": "bscsAddress",
            "type": "t_contract(ERC20Upgradeable)2694",
            "src": "contracts/mstationNFT/MstationNFT.sol:17"
          },
          {
            "contract": "MstationNFT",
            "label": "bscdAddress",
            "type": "t_contract(ERC20Upgradeable)2694",
            "src": "contracts/mstationNFT/MstationNFT.sol:18"
          },
          {
            "contract": "MstationNFT",
            "label": "busdAddress",
            "type": "t_contract(ERC20Upgradeable)2694",
            "src": "contracts/mstationNFT/MstationNFT.sol:19"
          },
          {
            "contract": "MstationNFT",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/MstationNFT.sol:20"
          },
          {
            "contract": "MstationNFT",
            "label": "totalSupplied",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/MstationNFT.sol:21"
          },
          {
            "contract": "MstationNFT",
            "label": "nftSlots",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/mstationNFT/MstationNFT.sol:22"
          },
          {
            "contract": "MstationNFT",
            "label": "baseMintFee",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/MstationNFT.sol:23"
          },
          {
            "contract": "MstationNFT",
            "label": "baseMintLimitedFee",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/MstationNFT.sol:24"
          },
          {
            "contract": "MstationNFT",
            "label": "tokenMintLimitedFee",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/MstationNFT.sol:25"
          },
          {
            "contract": "MstationNFT",
            "label": "serviceFee",
            "type": "t_uint16",
            "src": "contracts/mstationNFT/MstationNFT.sol:26"
          },
          {
            "contract": "MstationNFT",
            "label": "characterContracts",
            "type": "t_array(t_struct(CharacterContract)10523_storage)dyn_storage",
            "src": "contracts/mstationNFT/MstationNFT.sol:33"
          },
          {
            "contract": "MstationNFT",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/MstationNFT.sol:43"
          },
          {
            "contract": "MstationNFT",
            "label": "blackList",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/mstationNFT/MstationNFT.sol:44"
          },
          {
            "contract": "MstationNFT",
            "label": "priorityList",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/mstationNFT/MstationNFT.sol:45"
          },
          {
            "contract": "MstationNFT",
            "label": "bnbMintFee",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/MstationNFT.sol:46"
          },
          {
            "contract": "MstationNFT",
            "label": "nonceRandom2",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/MstationNFT.sol:47"
          },
          {
            "contract": "MstationNFT",
            "label": "nonceRandom3",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/MstationNFT.sol:48"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(ERC20Upgradeable)2694": {
            "label": "contract ERC20Upgradeable"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_struct(CharacterContract)10523_storage)dyn_storage": {
            "label": "struct MstationNFT.CharacterContract[]"
          },
          "t_struct(CharacterContract)10523_storage": {
            "label": "struct MstationNFT.CharacterContract",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "rarity",
                "type": "t_uint256"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "822a2d929c7dbcaf81be60e19b9d7bf6660227522a9498bb3c7b892bb88fef65": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x7d4ebdc3d49590ac2f897d574d6817a94d89f09c22122f0c29fe8fe484988861",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)5458_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "BSCD",
            "label": "pause",
            "type": "t_bool",
            "src": "contracts/token/BSCD.sol:15"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)5458_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)5458_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5157_storage"
              }
            ]
          },
          "t_struct(Set)5157_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "4be7244f0b173e0e73d3cc1e28f50a84f314568ed07ba883437eba08c1700c95": {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x2a0cf766b0f5bba598bc2705076b05d2d83f3c6008633b03bd9753bd0c05339d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "MstationNFT",
            "label": "isInitialized",
            "type": "t_bool",
            "src": "contracts/mstationNFT/MstationNFT.sol:13"
          },
          {
            "contract": "MstationNFT",
            "label": "nonceRandom",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/MstationNFT.sol:14"
          },
          {
            "contract": "MstationNFT",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts/mstationNFT/MstationNFT.sol:15"
          },
          {
            "contract": "MstationNFT",
            "label": "burnWallet",
            "type": "t_address",
            "src": "contracts/mstationNFT/MstationNFT.sol:16"
          },
          {
            "contract": "MstationNFT",
            "label": "bscsAddress",
            "type": "t_contract(ERC20Upgradeable)2694",
            "src": "contracts/mstationNFT/MstationNFT.sol:17"
          },
          {
            "contract": "MstationNFT",
            "label": "bscdAddress",
            "type": "t_contract(ERC20Upgradeable)2694",
            "src": "contracts/mstationNFT/MstationNFT.sol:18"
          },
          {
            "contract": "MstationNFT",
            "label": "busdAddress",
            "type": "t_contract(ERC20Upgradeable)2694",
            "src": "contracts/mstationNFT/MstationNFT.sol:19"
          },
          {
            "contract": "MstationNFT",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/MstationNFT.sol:20"
          },
          {
            "contract": "MstationNFT",
            "label": "totalSupplied",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/MstationNFT.sol:21"
          },
          {
            "contract": "MstationNFT",
            "label": "nftSlots",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/mstationNFT/MstationNFT.sol:22"
          },
          {
            "contract": "MstationNFT",
            "label": "baseMintFee",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/MstationNFT.sol:23"
          },
          {
            "contract": "MstationNFT",
            "label": "baseMintLimitedFee",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/MstationNFT.sol:24"
          },
          {
            "contract": "MstationNFT",
            "label": "tokenMintLimitedFee",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/MstationNFT.sol:25"
          },
          {
            "contract": "MstationNFT",
            "label": "serviceFee",
            "type": "t_uint16",
            "src": "contracts/mstationNFT/MstationNFT.sol:26"
          },
          {
            "contract": "MstationNFT",
            "label": "characterContracts",
            "type": "t_array(t_struct(CharacterContract)11116_storage)dyn_storage",
            "src": "contracts/mstationNFT/MstationNFT.sol:33"
          },
          {
            "contract": "MstationNFT",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/MstationNFT.sol:42"
          },
          {
            "contract": "MstationNFT",
            "label": "blackList",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/mstationNFT/MstationNFT.sol:43"
          },
          {
            "contract": "MstationNFT",
            "label": "priorityList",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/mstationNFT/MstationNFT.sol:44"
          },
          {
            "contract": "MstationNFT",
            "label": "bnbMintFee",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/MstationNFT.sol:45"
          },
          {
            "contract": "MstationNFT",
            "label": "nonceRandom2",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/MstationNFT.sol:46"
          },
          {
            "contract": "MstationNFT",
            "label": "nonceRandom3",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/MstationNFT.sol:47"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(ERC20Upgradeable)2694": {
            "label": "contract ERC20Upgradeable"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_array(t_struct(CharacterContract)11116_storage)dyn_storage": {
            "label": "struct MstationNFT.CharacterContract[]"
          },
          "t_struct(CharacterContract)11116_storage": {
            "label": "struct MstationNFT.CharacterContract",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "rarity",
                "type": "t_uint256"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "18143843b031ffe1cb3f96980da0599dac8c59cf119baed5f6f772db8ecf4555": {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x9307042b3e338ab15841cb2013eb5ecb380858587dcf7cb3eb1098403b7860a3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:76"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "mintStart",
            "type": "t_bool",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:17"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "factory",
            "type": "t_address",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:53"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "mstationSchool",
            "type": "t_address",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:54"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "whitelisted",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:55"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "heroAttributes",
            "type": "t_mapping(t_uint256,t_struct(HeroAttribute)9745_storage)",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:57"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "heroCombats",
            "type": "t_mapping(t_uint256,t_struct(HeroCombat)9760_storage)",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:58"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "baseUri",
            "type": "t_string_storage",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:60"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "dropPrice",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:61"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "dropList",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:63"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "nonce",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:65"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "nonce2",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:66"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "nonce3",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:67"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "whitelistBoxMinters",
            "type": "t_mapping(t_address,t_struct(WhitelistBoxMinter)9805_storage)",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:75"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:77"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "rarity",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:78"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "minValues",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:79"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "maxValues",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:80"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "tokePrefix",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:81"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "nonceRandom",
            "type": "t_uint256",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:82"
          },
          {
            "contract": "BaseMStationNFT",
            "label": "advantageIndex",
            "type": "t_uint16",
            "src": "contracts/mstationNFT/BaseMStationNFT.sol:84"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(HeroAttribute)9745_storage)": {
            "label": "mapping(uint256 => struct BaseMStationNFT.HeroAttribute)"
          },
          "t_struct(HeroAttribute)9745_storage": {
            "label": "struct BaseMStationNFT.HeroAttribute",
            "members": [
              {
                "label": "strength",
                "type": "t_uint16"
              },
              {
                "label": "stamina",
                "type": "t_uint16"
              },
              {
                "label": "vitality",
                "type": "t_uint16"
              },
              {
                "label": "courage",
                "type": "t_uint16"
              },
              {
                "label": "dexterity",
                "type": "t_uint16"
              },
              {
                "label": "intelligence",
                "type": "t_uint16"
              },
              {
                "label": "breed",
                "type": "t_uint16"
              },
              {
                "label": "level",
                "type": "t_uint16"
              },
              {
                "label": "rarity",
                "type": "t_uint16"
              },
              {
                "label": "teamId",
                "type": "t_uint16"
              },
              {
                "label": "talent",
                "type": "t_uint16"
              },
              {
                "label": "skill",
                "type": "t_uint16"
              },
              {
                "label": "combat",
                "type": "t_uint16"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_struct(HeroCombat)9760_storage)": {
            "label": "mapping(uint256 => struct BaseMStationNFT.HeroCombat)"
          },
          "t_struct(HeroCombat)9760_storage": {
            "label": "struct BaseMStationNFT.HeroCombat",
            "members": [
              {
                "label": "lastCombatBlock",
                "type": "t_uint256"
              },
              {
                "label": "health",
                "type": "t_uint256"
              },
              {
                "label": "physicalAttack",
                "type": "t_uint256"
              },
              {
                "label": "magicalAttack",
                "type": "t_uint256"
              },
              {
                "label": "defense",
                "type": "t_uint256"
              },
              {
                "label": "magicResistance",
                "type": "t_uint256"
              },
              {
                "label": "accuracy",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_struct(WhitelistBoxMinter)9805_storage)": {
            "label": "mapping(address => struct BaseMStationNFT.WhitelistBoxMinter)"
          },
          "t_struct(WhitelistBoxMinter)9805_storage": {
            "label": "struct BaseMStationNFT.WhitelistBoxMinter",
            "members": [
              {
                "label": "total",
                "type": "t_uint256"
              },
              {
                "label": "startBlock",
                "type": "t_uint256"
              },
              {
                "label": "endBlock",
                "type": "t_uint256"
              },
              {
                "label": "totalMinted",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "251df85e7033e0c16b493ac51ca32fd10e8558fc645b91f4725d3df50289ea32": {
      "address": "0x4A679253410272dd5232B3Ff7cF5dbB88f295319",
      "txHash": "0x928b60e0af1d3ba3d49cf3ea92aea24d1d1bb1543bb0acd327b889c34f072531",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "MstationPvE",
            "label": "advantureId",
            "type": "t_uint256",
            "src": "contracts/pve/MstationPve.sol:28"
          },
          {
            "contract": "MstationPvE",
            "label": "nonceRandom",
            "type": "t_uint256",
            "src": "contracts/pve/MstationPve.sol:29"
          },
          {
            "contract": "MstationPvE",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts/pve/MstationPve.sol:30"
          },
          {
            "contract": "MstationPvE",
            "label": "burnWallet",
            "type": "t_address",
            "src": "contracts/pve/MstationPve.sol:31"
          },
          {
            "contract": "MstationPvE",
            "label": "mstAddress",
            "type": "t_contract(ERC20Upgradeable)2694",
            "src": "contracts/pve/MstationPve.sol:32"
          },
          {
            "contract": "MstationPvE",
            "label": "bscdAddress",
            "type": "t_contract(ERC20Upgradeable)2694",
            "src": "contracts/pve/MstationPve.sol:33"
          },
          {
            "contract": "MstationPvE",
            "label": "iBscd",
            "type": "t_contract(IBSCD)6581",
            "src": "contracts/pve/MstationPve.sol:34"
          },
          {
            "contract": "MstationPvE",
            "label": "bscdTokenAddress",
            "type": "t_address",
            "src": "contracts/pve/MstationPve.sol:35"
          },
          {
            "contract": "MstationPvE",
            "label": "luckyRatio",
            "type": "t_uint256",
            "src": "contracts/pve/MstationPve.sol:36"
          },
          {
            "contract": "MstationPvE",
            "label": "requireBSCD",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/pve/MstationPve.sol:37"
          },
          {
            "contract": "MstationPvE",
            "label": "battleHistory",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Battle)13139_storage))",
            "src": "contracts/pve/MstationPve.sol:98"
          },
          {
            "contract": "MstationPvE",
            "label": "listMonster",
            "type": "t_mapping(t_uint64,t_struct(Monster)13162_storage)",
            "src": "contracts/pve/MstationPve.sol:100"
          },
          {
            "contract": "MstationPvE",
            "label": "listBattleConfig",
            "type": "t_mapping(t_uint16,t_struct(BattleConfig)13173_storage)",
            "src": "contracts/pve/MstationPve.sol:102"
          },
          {
            "contract": "MstationPvE",
            "label": "rewardConfigs",
            "type": "t_mapping(t_uint16,t_struct(RewardConfig)13180_storage)",
            "src": "contracts/pve/MstationPve.sol:104"
          },
          {
            "contract": "MstationPvE",
            "label": "rewardLogs",
            "type": "t_mapping(t_uint256,t_struct(HeroReward)13187_storage)",
            "src": "contracts/pve/MstationPve.sol:107"
          },
          {
            "contract": "MstationPvE",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/pve/MstationPve.sol:110"
          },
          {
            "contract": "MstationPvE",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/pve/MstationPve.sol:111"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(ERC20Upgradeable)2694": {
            "label": "contract ERC20Upgradeable"
          },
          "t_contract(IBSCD)6581": {
            "label": "contract IBSCD"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Battle)13139_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MstationPvE.Battle))"
          },
          "t_mapping(t_uint256,t_struct(Battle)13139_storage)": {
            "label": "mapping(uint256 => struct MstationPvE.Battle)"
          },
          "t_struct(Battle)13139_storage": {
            "label": "struct MstationPvE.Battle",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "startBlock",
                "type": "t_uint256"
              },
              {
                "label": "rewardMST",
                "type": "t_uint256"
              },
              {
                "label": "rewardBSCD",
                "type": "t_uint256"
              },
              {
                "label": "isWin",
                "type": "t_bool"
              },
              {
                "label": "claimed",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint64,t_struct(Monster)13162_storage)": {
            "label": "mapping(uint64 => struct MstationPvE.Monster)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Monster)13162_storage": {
            "label": "struct MstationPvE.Monster",
            "members": [
              {
                "label": "rewardMST",
                "type": "t_uint256"
              },
              {
                "label": "rewardBSCD",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint16,t_struct(BattleConfig)13173_storage)": {
            "label": "mapping(uint16 => struct MstationPvE.BattleConfig)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(BattleConfig)13173_storage": {
            "label": "struct MstationPvE.BattleConfig",
            "members": [
              {
                "label": "locationId",
                "type": "t_uint16"
              },
              {
                "label": "numMonster",
                "type": "t_uint16"
              },
              {
                "label": "numBoss",
                "type": "t_uint16"
              },
              {
                "label": "rewardMST",
                "type": "t_uint256"
              },
              {
                "label": "rewardBSCD",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint16,t_struct(RewardConfig)13180_storage)": {
            "label": "mapping(uint16 => struct MstationPvE.RewardConfig)"
          },
          "t_struct(RewardConfig)13180_storage": {
            "label": "struct MstationPvE.RewardConfig",
            "members": [
              {
                "label": "numBattle",
                "type": "t_uint16"
              },
              {
                "label": "rewardMST",
                "type": "t_uint256"
              },
              {
                "label": "rewardBSCD",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(HeroReward)13187_storage)": {
            "label": "mapping(uint256 => struct MstationPvE.HeroReward)"
          },
          "t_struct(HeroReward)13187_storage": {
            "label": "struct MstationPvE.HeroReward",
            "members": [
              {
                "label": "numBattle",
                "type": "t_uint16"
              },
              {
                "label": "rewardedMST",
                "type": "t_uint256"
              },
              {
                "label": "rewardedBSCD",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
